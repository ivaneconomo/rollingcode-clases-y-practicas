// Crear objeto literario
const auto = {
  marca: 'Peugeot',
  color: 'Rojo',
  modelo: () => {
    //console.log('2020')
  }
};

// Crear objeto con funci√≥n constructora (clase versi√≥n antigua)
function Auto (colorA, marcaA, modeloA, a√±oA) {
  this.color = colorA;
  this.marca = marcaA;
  this.modelo = modeloA;
  this.a√±o = a√±oA;
  this.mostrarModelo = () => {
    alert(this.modelo);
  };
};

const auto1 = new Auto('Negro', 'Fiat', 'Punto', 2021);
const auto2 = new Auto('rojo', 'chevrolet', 'cruce', 2022);
//console.log(auto1, auto2);

// Constructor Object()
const persona = new Object();
persona.nombre = 'Iv√°n';
//console.log(persona);

////////////////////////
// Comparando Objetos //
const persona1 = {name: 'jose'};
const persona2 = persona1
//console.log(persona1 == persona2); // √©sto s√≠ devuelve True


////////////
// CLASES //

// Clase con ES6
class Persona {
  constructor(nombre, apellido, edad){
    this.nombre = nombre;
    this.apellido = apellido;
    this.edad = edad;
  };
  //m√©todos
  comer() {
    alert(`${this.nombre}, est√° comiendo.`)
  }
};

// Objetos e instancias
const nuevaPersona = new Persona('Alvarito', 'Jotar', 24);
//console.log(nuevaPersona);

/* Modelando clases

Cuenta bancaria - Dificultad:  üü¢üü°
2-Escribe un programa que cree un objeto "cuenta" con las siguientes propiedades:
Una propiedad titular con el valor "Alex".
Una propiedad saldo, teniendo como valor inicial 0.
Un m√©todo ingresar() que permita a√±adir dinero a la cuenta, pasando la cantidad como par√°metro
Un m√©todo extraer() que permita retirar la cantidad pasada como par√°metro.
Un m√©todo informar() que retorne la informaci√≥n del estado de la cuenta. 

Utiliza este objeto para mostrar la descripci√≥n, ingresar y extraer dinero y volver a mostrar la descripci√≥n del estado de la cuenta. */

class Cuenta {
  constructor(titular, saldo){
    this.titular = titular;
    this.saldo = saldo;
  };
  // m√©todos
  ingresar(dinero) {
    this.saldo += dinero;
  };
  extraer(dinero){
    if (this.saldo >= dinero) {
      this.saldo -= dinero;
    } else {
      alert('No tienes suficiente saldo en la cuenta. Kieres tener?')
    };
  };
  informar(){
    alert(`Saldo en la cuenta ${this.saldo}`);
  };
};

const nuevaCuenta = new Cuenta('Alex', 0);
//console.log(nuevaCuenta);

/* Rect√°ngulos
Dificultad:  üü¢
3-Escribe una clase que permita crear distintos objetos ‚Äúrect√°ngulos‚Äù, con las propiedades de alto y ancho, mas los m√©todos necesarios para modificar y mostrar sus propiedades, calcular el per√≠metro y el √°rea */

class Rectangulos {
  alto = this.ladoA;
  ancho = this.ladoB;

  m√©todos
  modificarAlto(alto){
    this.alto = alto;
  };
  modificarAncho(ancho){
    this.ancho = ancho;
  };
  perimetro(ladoA, ladoB){

  };
  area(ladoA, ladoB) {

  };
};

const nuevoRectangulo = new Rectangulos();
console.log(nuevoRectangulo);